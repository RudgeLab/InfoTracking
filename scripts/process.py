import numpy as np
from skimage.io import imread, imsave
from scipy.ndimage import binary_erosion, binary_dilation
from skimage.morphology import flood
from skimage.morphology import area_closing
from scipy.ndimage import distance_transform_edt
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt

# Position and velocity arrays from velocimetry
vel = np.load('vel.np.npy')
pos = np.load('pos.np.npy')

# Size of data
nx,ny,nt,_ = vel.shape

# Load the tif image from the microscope
im_all = imread('../10x_1.5x_-5_pAAA_MG_1_MMStack_Pos9.ome.tif')

# Load the mask generated by trainable weka
mask_all = imread('../C2-10x_1.5x_-5_pAAA_MG_1_MMStack_Pos9.ome.70-71.mask.tif')

for frame in range(nt):
    # Subtract drift from velocities
    vel[:,:,frame,0] -= np.nanmean(vel[:,:,frame,0])
    vel[:,:,frame,1] -= np.nanmean(vel[:,:,frame,1])

    # Compute distance of each pixel from colony edge
    edt = distance_transform_edt(mask_all[frame,:,:])

    # Get direction to colony edge as negative of gradient of distance
    gx,gy = np.gradient(edt)
    gx = -gx[pos[:,:,frame,0].astype(int)+31, pos[:,:,frame,1].astype(int)+31]
    gy = -gy[pos[:,:,frame,0].astype(int)+31, pos[:,:,frame,1].astype(int)+31]

    # Compute magnitude of velocities in radial direction
    vmag = vel[:,:,frame,0] * gx + vel[:,:,frame,1] * gy

    # Radial position of each grid square
    radpos = edt[pos[:,:,frame,0].astype(int)+31, pos[:,:,frame,1].astype(int)+31]

    # Fit exponential function to velocity as function of radial position
    x = radpos[~np.isnan(vmag)].ravel()
    y = vmag[~np.isnan(vmag)].ravel()
    plt.plot(x, y, '.')
    plt.show()
    [p,cov] = curve_fit(lambda t,r0,mu0,C: 0.5*r0*mu0*np.exp(-t/r0) + C,  x,  y,  p0=(50,0.1,0))
    # r0 = characteristic length scale of exponential decay
    r0 = p[0]
    # mu0 = growth rate on edge of colony
    mu0 = p[1]
    # C = error in velocity estimation
    C = p[2]

    # Print result
    print(f'frame = {frame}, r0 = {r0}, mu0 = {mu0}, C = {C}')

    # Plot velocity profile and exponential fit
    plt.subplot(1, 2, 1)
    plt.plot(x, y, '.')
    xx = np.linspace(0, radpos.max(), 100)
    yy = 0.5 * r0 * mu0 * np.exp(-xx/r0) + C
    plt.plot(xx, yy, '--')

    # Growth rate is mu0 * exp(-r/r0)
    gr = mu0 * np.exp(-radpos/r0)
    # Set growth rate outside colony to nan
    gr[radpos==0] = np.nan

    # Plot growth rate spatial pattern
    plt.subplot(1, 2, 2)
    plt.imshow(gr)
    plt.colorbar()



    # Show figure
    plt.show()

