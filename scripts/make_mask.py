import numpy as np
from skimage.io import imread, imsave
from scipy.ndimage import binary_erosion, binary_dilation
from skimage.morphology import flood
from skimage.morphology import area_closing
import matplotlib.pyplot as plt

# Load the mask generated by trainable weka
weka = imread('../C2-10x_1.5x_-5_pAAA_MG_1_MMStack_Pos9.ome.70-71.weka.tif')

# Get number of frames
nt,_,_ = weka.shape

# Make binary mask of colony from weka output
# Normalise
mask = weka / weka.max()
# Invert and make logical
mask = mask==0

for frame in range(nt):
    # Erode then dilate n times to remove small objects attached to colony
    n = 3
    for _ in range(n):
        mask[frame,:,:] = binary_erosion(mask[frame,:,:])
    for _ in range(n):
        mask[frame,:,:] = binary_dilation(mask[frame,:,:])

    # Flood fill to find central object (colony)
    mask[frame,:,:] = flood(mask[frame,:,:], (512,512))

    # Remove holes in colony
    mask[frame,:,:] = area_closing(mask[frame,:,:], area_threshold=1024)

# Save final mask
imsave('../C2-10x_1.5x_-5_pAAA_MG_1_MMStack_Pos9.ome.70-71.mask.tif', mask)


